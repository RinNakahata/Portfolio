name: Deploy AWS Infrastructure

  on:
    push:
      branches: [ main ]
    pull_request:
      branches: [ main ]
    workflow_dispatch:

  env:
    AWS_REGION: ap-northeast-1
    TERRAFORM_VERSION: 1.5.0

  jobs:
    terraform-validate:
      name: Terraform Validate
      runs-on: ubuntu-latest

      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: ./terraform

      - name: Terraform Init
        run: terraform init -backend=false
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

    terraform-plan:
      name: Terraform Plan
      runs-on: ubuntu-latest
      needs: terraform-validate
      if: github.event_name == 'pull_request'

      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan -no-color
        working-directory: ./terraform

    terraform-apply:
      name: Terraform Apply
      runs-on: ubuntu-latest
      needs: terraform-validate
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      environment: production

      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

    deploy-frontend:
      name: Deploy Frontend to S3
      runs-on: ubuntu-latest
      needs: terraform-apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'

      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync src/frontend/ s3://portfolio-static-website-$(terraform output -raw s3_bucket_name | cut
  -d'-' -f4-) --delete
        working-directory: ./terraform

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation --distribution-id $(terraform output -raw
  cloudfront_distribution_id) --paths "/*"
        working-directory: ./terraform